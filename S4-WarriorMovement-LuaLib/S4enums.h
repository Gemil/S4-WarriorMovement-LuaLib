///////////////////////////////////////////////////////////////////////////////
// MIT License
//
// Copyright (c) 2020 nyfrk <nyfrk@gmx.net>
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
///////////////////////////////////////////////////////////////////////////////
#pragma once
#include <S4ModApi.h>

enum S4_ENTITY_ENUM : BYTE {
	S4_ENTITY_UNKNOWN,

	S4_ENTITY_BUILDING,
	S4_ENTITY_PILE,

	// Ground Mobile Entities
		// Settler
		S4_ENTITY_SETTLER,
		// Animal
		S4_ENTITY_LANDANIMAL,
		// Vehicles
			// Wheelers
			S4_ENTITY_CART,
			// Catapult
			S4_ENTITY_CATAPULT_MAYA,
			S4_ENTITY_CATAPULT_TROJAN,
			S4_ENTITY_CATAPULT_ROMAN,
			S4_ENTITY_CATAPULT_VIKING,
			// Ships
			S4_ENTITY_FERRY,
			S4_ENTITY_TRANSPORTSHIP,
			// War Ship
			S4_ENTITY_WARSHIP_MAYA,
			S4_ENTITY_WARSHIP_TROJAN,
			S4_ENTITY_WARSHIP_ROMAN,
			S4_ENTITY_WARSHIP_VIKING,

			// Flying Mobile Entites
			S4_ENTITY_MANAKOPTER,

			// Stationary Deco Entities
			S4_ENTITY_DECO,
			S4_ENTITY_HIVE,
			S4_ENTITY_MUSHROOM,
			S4_ENTITY_PLANT,
			S4_ENTITY_SHADOW_HERB,
			S4_ENTITY_STONE,
			S4_ENTITY_TREE,
};

enum S4_GROUND_ENUM : BYTE {
	WATER1 = 0, // water1 does only exist without waves (it ignores the pond flag)
	WATER2 = 1, // this ground respects the pond flag
	WATER3 = 2, // this ground respects the pond flag
	WATER4 = 3, // this ground respects the pond flag
	WATER5 = 4, // this ground respects the pond flag
	WATER6 = 5, // this ground respects the pond flag
	WATER7 = 6, // this ground respects the pond flag
	WATER8 = 7, // deep sea, this ground respects the pond flag
	GRASS = 16,
	GRASS_ROCK = 17, // transition triangles only: grass grass rock
	GRASS_ISLE = 18,
	GRASS_DESERT = 20, // transition triangles only: grass grass desert
	GRASS_SWAMP = 21, // transition triangles only: grass grass swamp
	GRASS_MUD = 23,  // transition triangles only: grass grass mud
	DARKGRASS = 24,
	DARKGRASS_GRASS = 25, // transition triangles only: darkgrass darkgrass grass
	SANDYROAD = 28,
	COBBLEDROAD = 29,
	ROCK = 32,
	ROCK_GRASS = 33, // transition triangles only: rock rock grass
	ROCK_SNOW = 35, // transition triangles only: rock rock snow
	BEACH = 48,
	DESERT = 64,
	DESERT_GRASS = 65, // transition triangles only: desert desert grass
	SWAMP = 80,
	SWAMP_GRASS = 81, // transition triangles only: swamp swamp grass
	RIVER1 = 96,
	RIVER2 = 97,
	RIVER3 = 98,
	RIVER4 = 99,
	SNOW = 128,
	SNOW_ROCK = 129,  // transition triangles only: snow snow rock
	MUD = 144,
	MUD_GRASS = 145,  // transition triangles only: mud mud grass
};

enum S4_RESOURCE_ENUM : BYTE {
	S4_RESOURCE_NONE,
	S4_RESOURCE_FISH_1, S4_RESOURCE_FISH_2, S4_RESOURCE_FISH_3, S4_RESOURCE_FISH_4, S4_RESOURCE_FISH_5, S4_RESOURCE_FISH_6, S4_RESOURCE_FISH_7, S4_RESOURCE_FISH_8, S4_RESOURCE_FISH_9, S4_RESOURCE_FISH_10, S4_RESOURCE_FISH_11, S4_RESOURCE_FISH_12, S4_RESOURCE_FISH_13, S4_RESOURCE_FISH_14, S4_RESOURCE_FISH_15, S4_RESOURCE_FISH_16,
	S4_RESOURCE_COAL_1, S4_RESOURCE_COAL_2, S4_RESOURCE_COAL_3, S4_RESOURCE_COAL_4, S4_RESOURCE_COAL_5, S4_RESOURCE_COAL_6, S4_RESOURCE_COAL_7, S4_RESOURCE_COAL_8, S4_RESOURCE_COAL_9, S4_RESOURCE_COAL_10, S4_RESOURCE_COAL_11, S4_RESOURCE_COAL_12, S4_RESOURCE_COAL_13, S4_RESOURCE_COAL_14, S4_RESOURCE_COAL_15, S4_RESOURCE_COAL_16,
	S4_RESOURCE_IRON_1, S4_RESOURCE_IRON_2, S4_RESOURCE_IRON_3, S4_RESOURCE_IRON_4, S4_RESOURCE_IRON_5, S4_RESOURCE_IRON_6, S4_RESOURCE_IRON_7, S4_RESOURCE_IRON_8, S4_RESOURCE_IRON_9, S4_RESOURCE_IRON_10, S4_RESOURCE_IRON_11, S4_RESOURCE_IRON_12, S4_RESOURCE_IRON_13, S4_RESOURCE_IRON_14, S4_RESOURCE_IRON_15, S4_RESOURCE_IRON_16,
	S4_RESOURCE_GOLD_1, S4_RESOURCE_GOLD_2, S4_RESOURCE_GOLD_3, S4_RESOURCE_GOLD_4, S4_RESOURCE_GOLD_5, S4_RESOURCE_GOLD_6, S4_RESOURCE_GOLD_7, S4_RESOURCE_GOLD_8, S4_RESOURCE_GOLD_9, S4_RESOURCE_GOLD_10, S4_RESOURCE_GOLD_11, S4_RESOURCE_GOLD_12, S4_RESOURCE_GOLD_13, S4_RESOURCE_GOLD_14, S4_RESOURCE_GOLD_15, S4_RESOURCE_GOLD_16,
	S4_RESOURCE_SULPHUR_1, S4_RESOURCE_SULPHUR_2, S4_RESOURCE_SULPHUR_3, S4_RESOURCE_SULPHUR_4, S4_RESOURCE_SULPHUR_5, S4_RESOURCE_SULPHUR_6, S4_RESOURCE_SULPHUR_7, S4_RESOURCE_SULPHUR_8, S4_RESOURCE_SULPHUR_9, S4_RESOURCE_SULPHUR_10, S4_RESOURCE_SULPHUR_11, S4_RESOURCE_SULPHUR_12, S4_RESOURCE_SULPHUR_13, S4_RESOURCE_SULPHUR_14, S4_RESOURCE_SULPHUR_15, S4_RESOURCE_SULPHUR_16,
	S4_RESOURCE_STONEMINE_1, S4_RESOURCE_STONEMINE_2, S4_RESOURCE_STONEMINE_3, S4_RESOURCE_STONEMINE_4, S4_RESOURCE_STONEMINE_5, S4_RESOURCE_STONEMINE_6, S4_RESOURCE_STONEMINE_7, S4_RESOURCE_STONEMINE_8, S4_RESOURCE_STONEMINE_9, S4_RESOURCE_STONEMINE_10, S4_RESOURCE_STONEMINE_11, S4_RESOURCE_STONEMINE_12, S4_RESOURCE_STONEMINE_13, S4_RESOURCE_STONEMINE_14, S4_RESOURCE_STONEMINE_15, S4_RESOURCE_STONEMINE_16,
	S4_RESOURCE_STONE_1, S4_RESOURCE_STONE_2, S4_RESOURCE_STONE_3, S4_RESOURCE_STONE_4, S4_RESOURCE_STONE_5, S4_RESOURCE_STONE_6, S4_RESOURCE_STONE_7, S4_RESOURCE_STONE_8, S4_RESOURCE_STONE_9, S4_RESOURCE_STONE_10, S4_RESOURCE_STONE_11, S4_RESOURCE_STONE_12, S4_RESOURCE_STONE_13, S4_RESOURCE_STONE_14, S4_RESOURCE_STONE_15, S4_RESOURCE_STONE_16,
	S4_RESOURCE_WOOD, // trees
};

// Roles define what an entity "does" or is destined for. You may create custom 
// roles for entities. Just make sure to implement the proper Role interface for 
// the entity type (building/pile/settler) you wish to program.
enum S4_ROLE_ENUM : BYTE {
	S4_ROLE_UNKNOWN,

	// Pile Roles
	S4_ROLE_PILE_ANYWHERE,
	S4_ROLE_PILE_BUILDING_SITE,
	S4_ROLE_PILE_DELIVERY,
	S4_ROLE_PILE_PRODUCTION,
	S4_ROLE_PILE_STORAGE,
	S4_ROLE_PILE_TRADE,

	// Building Roles
	S4_ROLE_BUILDING_WORKUP,  // needs confirmation
	S4_ROLE_BUILDING_ANIMALRANCH,
	S4_ROLE_BUILDING_MILITARY, // needs confirmation
	S4_ROLE_BUILDING_CASTLE,
	S4_ROLE_BUILDING_TRADING,
	S4_ROLE_BUILDING_BARRACK,
	S4_ROLE_BUILDING_BIGTEMPLE,
	S4_ROLE_BUILDING_SITE,
	S4_ROLE_BUILDING_MUSHROOMFARM,
	S4_ROLE_BUILDING_DARKTEMPLE,
	S4_ROLE_BUILDING_EYECATCHER,
	S4_ROLE_BUILDING_FARM,
	S4_ROLE_BUILDING_GATHER,
	S4_ROLE_BUILDING_LOOKOUTTOWER,
	S4_ROLE_BUILDING_MANAKOPTERHALL,
	S4_ROLE_BUILDING_MINE,
	S4_ROLE_BUILDING_PRODUCTION,
	S4_ROLE_BUILDING_RESIDENCE,
	S4_ROLE_BUILDING_SIMPLE,
	S4_ROLE_BUILDING_SMALLTEMPLE,
	S4_ROLE_BUILDING_STORAGE,
	S4_ROLE_BUILDING_WORKSHOP,

	// Settler Roles
	S4_ROLE_SETTLER_BUILDER,
	S4_ROLE_SETTLER_CARRIER,
	S4_ROLE_SETTLER_DARKGARDENER,
	S4_ROLE_SETTLER_DIGGER,
	S4_ROLE_SETTLER_DONKEY,
	S4_ROLE_SETTLER_DOOR,
	S4_ROLE_SETTLER_FLEE,
	S4_ROLE_SETTLER_FREEWORKER,
	S4_ROLE_SETTLER_HOUSEWORKER,
	S4_ROLE_SETTLER_HUNTER,
	S4_ROLE_SETTLER_MUSHROOMFARMER,
	S4_ROLE_SETTLER_SLAVE,
	S4_ROLE_SETTLER_TOWERSOLDIER,

	// The following are selectables
	S4_ROLE_SETTLER_GARDENER,
	S4_ROLE_SETTLER_GEOLOGIST,
	S4_ROLE_SETTLER_PIONEER,
	S4_ROLE_SETTLER_PRIEST,
	S4_ROLE_SETTLER_THIEF,

	// The following roles have a WarriorBehaviour attached. Note that 
	// war machines/ships do not have a role but inherit directly from WarriorBehaviour!
	S4_ROLE_SETTLER_SOLDIER,
	S4_ROLE_SETTLER_SQUADLEADER,  // needs confirmation
	S4_ROLE_SETTLER_HJB,  // needs confirmation
	S4_ROLE_SETTLER_SHAMAN,
	S4_ROLE_SETTLER_SABOTEUR,
};

enum S4_TRIBE_ENUM : BYTE {
	S4_TRIBE_NONE = 255,
	S4_TRIBE_ANY = 254,
	S4_TRIBE_ROMAN = 0, // tribe 0
	S4_TRIBE_VIKING,
	S4_TRIBE_MAYA,
	S4_TRIBE_DARK,
	S4_TRIBE_TROJAN,
};

enum S4_GOOD_ENUM : BYTE {
	S4_GOOD_NONE = 0,
	S4_GOOD_AGAVE, // good id 1
	S4_GOOD_AMMO,
	S4_GOOD_ARMOR,
	S4_GOOD_AXE,
	S4_GOOD_BATTLEAXE,
	S4_GOOD_BLOWGUN,
	S4_GOOD_BOARD,
	S4_GOOD_BOW,
	S4_GOOD_BREAD,
	S4_GOOD_COAL, // 10
	S4_GOOD_FISH,
	S4_GOOD_FLOUR,
	S4_GOOD_GOAT,
	S4_GOOD_GOLDBAR,
	S4_GOOD_GOLDORE,
	S4_GOOD_GRAIN,
	S4_GOOD_GUNPOWDER,
	S4_GOOD_HAMMER,
	S4_GOOD_HONEY,
	S4_GOOD_IRONBAR,// 20
	S4_GOOD_IRONORE,
	S4_GOOD_LOG,
	S4_GOOD_MEAD,
	S4_GOOD_MEAT,
	S4_GOOD_PICKAXE,
	S4_GOOD_PIG,
	S4_GOOD_ROD,
	S4_GOOD_SAW,
	S4_GOOD_SCYTHE,
	S4_GOOD_SHEEP, // 30
	S4_GOOD_SHOVEL,
	S4_GOOD_STONE,
	S4_GOOD_SULFUR,
	S4_GOOD_SWORD,
	S4_GOOD_TEQUILA,
	S4_GOOD_WATER,
	S4_GOOD_WINE,
	S4_GOOD_BACKPACKCATAPULT,
	S4_GOOD_GOOSE,
	S4_GOOD_EXPLOSIVEARROW, // 40
	S4_GOOD_SUNFLOWEROIL,
	S4_GOOD_SUNFLOWER, // good id 42
};

enum S4_BUILDING_ENUM : BYTE {
	S4_BUILDING_NONE = 0,
	//S4_BUILDING_READY,
	//S4_BUILDING_UNDERCONSTRUCTION,
	S4_BUILDING_WOODCUTTERHUT, // building id 1
	S4_BUILDING_FORESTERHUT,
	S4_BUILDING_SAWMILL,
	S4_BUILDING_STONECUTTERHUT,
	S4_BUILDING_WATERWORKHUT,
	S4_BUILDING_FISHERHUT,
	S4_BUILDING_HUNTERHUT,
	S4_BUILDING_SLAUGHTERHOUSE,
	S4_BUILDING_MILL,
	S4_BUILDING_BAKERY, // 10
	S4_BUILDING_GRAINFARM,
	S4_BUILDING_ANIMALRANCH,
	S4_BUILDING_DONKEYRANCH,
	S4_BUILDING_STONEMINE,
	S4_BUILDING_IRONMINE,
	S4_BUILDING_GOLDMINE,
	S4_BUILDING_COALMINE,
	S4_BUILDING_SULFURMINE,
	S4_BUILDING_SMELTGOLD,
	S4_BUILDING_SMELTIRON, // 20
	S4_BUILDING_TOOLSMITH,
	S4_BUILDING_WEAPONSMITH,
	S4_BUILDING_VEHICLEHALL,
	S4_BUILDING_BARRACKS,
	S4_BUILDING_CHARCOALMAKER,
	S4_BUILDING_TRAININGCENTER,
	S4_BUILDING_HEALERHUT,
	S4_BUILDING_AMMOMAKERHUT,
	S4_BUILDING_GUNPOWDERMAKERHUT,
	S4_BUILDING_LANDSCAPEMAKERHUT, // 30
	S4_BUILDING_SHIPYARD,
	S4_BUILDING_PORT,
	S4_BUILDING_MARKETPLACE,
	S4_BUILDING_STORAGEAREA,
	S4_BUILDING_VINYARD,
	S4_BUILDING_AGAVEFARMERHUT,
	S4_BUILDING_TEQUILAMAKERHUT,
	S4_BUILDING_BEEKEEPERHUT,
	S4_BUILDING_MEADMAKERHUT,
	S4_BUILDING_RESIDENCESMALL,// 40
	S4_BUILDING_RESIDENCEMEDIUM,
	S4_BUILDING_RESIDENCEBIG,
	S4_BUILDING_SMALLTEMPLE,
	S4_BUILDING_BIGTEMPLE,
	S4_BUILDING_LOOKOUTTOWER,
	S4_BUILDING_GUARDTOWERSMALL,
	S4_BUILDING_GUARDTOWERBIG,
	S4_BUILDING_CASTLE,
	S4_BUILDING_MUSHROOMFARM,
	S4_BUILDING_DARKTEMPLE, // 50
	S4_BUILDING_FORTRESS,
	S4_BUILDING_PORTA,
	S4_BUILDING_PORTB,
	S4_BUILDING_PORTC,
	S4_BUILDING_PORTD,
	S4_BUILDING_PORTE,
	S4_BUILDING_PORTF,
	S4_BUILDING_SHIPYARDA,
	S4_BUILDING_SHIPYARDB,
	S4_BUILDING_SHIPYARDC,
	S4_BUILDING_SHIPYARDD,
	S4_BUILDING_SHIPYARDE,
	S4_BUILDING_SHIPYARDF,
	S4_BUILDING_EYECATCHER01,
	S4_BUILDING_EYECATCHER02,
	S4_BUILDING_EYECATCHER03,
	S4_BUILDING_EYECATCHER04,
	S4_BUILDING_EYECATCHER05,
	S4_BUILDING_EYECATCHER06,
	S4_BUILDING_EYECATCHER07,
	S4_BUILDING_EYECATCHER08,
	S4_BUILDING_EYECATCHER09,
	S4_BUILDING_EYECATCHER10,
	S4_BUILDING_EYECATCHER11,
	S4_BUILDING_EYECATCHER12,
	S4_BUILDING_SHIPYARDG,
	S4_BUILDING_SHIPYARDH,
	S4_BUILDING_PORTG,
	S4_BUILDING_PORTH,
	S4_BUILDING_MANACOPTERHALL,
	S4_BUILDING_SUNFLOWEROILMAKERHUT,
	S4_BUILDING_SUNFLOWERFARMERHUT,
};

enum S4_SETTLER_ENUM : BYTE {
	S4_SETTLER_NONE = 0,
	S4_SETTLER_CARRIER, // settler id 1
	S4_SETTLER_DIGGER,
	S4_SETTLER_BUILDER,
	S4_SETTLER_WOODCUTTER,
	S4_SETTLER_STONECUTTER,
	S4_SETTLER_FORESTER,
	S4_SETTLER_FARMERGRAIN,
	S4_SETTLER_FARMERANIMALS,
	S4_SETTLER_FISHER,
	S4_SETTLER_WATERWORKER,
	S4_SETTLER_HUNTER,
	S4_SETTLER_SAWMILLWORKER,
	S4_SETTLER_SMELTER,
	S4_SETTLER_MINEWORKER,
	S4_SETTLER_SMITH,
	S4_SETTLER_MILLER,
	S4_SETTLER_BAKER,
	S4_SETTLER_BUTCHER,
	S4_SETTLER_SHIPYARDWORKER,
	S4_SETTLER_HEALER,
	S4_SETTLER_CHARCOALMAKER,
	S4_SETTLER_AMMOMAKER,
	S4_SETTLER_VEHICLEMAKER,
	S4_SETTLER_VINTNER,
	S4_SETTLER_BEEKEEPER,
	S4_SETTLER_MEADMAKER,
	S4_SETTLER_AGAVEFARMER,
	S4_SETTLER_TEQUILAMAKER,
	S4_SETTLER_SWORDSMAN_01,
	S4_SETTLER_DARK_WARRIOR = S4_SETTLER_SWORDSMAN_01,
	S4_SETTLER_SWORDSMAN_02,
	S4_SETTLER_SWORDSMAN_03,
	S4_SETTLER_BOWMAN_01,
	S4_SETTLER_DARK_THROWER = S4_SETTLER_BOWMAN_01,
	S4_SETTLER_BOWMAN_02,
	S4_SETTLER_BOWMAN_03,
	S4_SETTLER_MEDIC_01,
	S4_SETTLER_MEDIC_02,
	S4_SETTLER_MEDIC_03,
	S4_SETTLER_AXEWARRIOR_01,
	S4_SETTLER_AXEWARRIOR_02,
	S4_SETTLER_AXEWARRIOR_03,
	S4_SETTLER_BLOWGUNWARRIOR_01,
	S4_SETTLER_BLOWGUNWARRIOR_02,
	S4_SETTLER_BLOWGUNWARRIOR_03,
	S4_SETTLER_SQUADLEADER,
	S4_SETTLER_PRIEST,
	S4_SETTLER_SABOTEUR,
	S4_SETTLER_PIONEER,
	S4_SETTLER_THIEF,
	S4_SETTLER_GEOLOGIST,
	S4_SETTLER_GARDENER,
	S4_SETTLER_LANDSCAPER,
	S4_SETTLER_DARKGARDENER,
	S4_SETTLER_MUSHROOMFARMER,
	S4_SETTLER_SHAMAN,
	S4_SETTLER_SLAVED_SETTLER,
	S4_SETTLER_TEMPLE_SERVANT,
	S4_SETTLER_ANGEL_01,
	S4_SETTLER_ANGEL_02,
	S4_SETTLER_ANGEL_03,
	S4_SETTLER_DONKEY,
	S4_SETTLER_BACKPACKCATAPULTIST_01,
	S4_SETTLER_BACKPACKCATAPULTIST_02,
	S4_SETTLER_BACKPACKCATAPULTIST_03,
	S4_SETTLER_SUNFLOWERFARMER,
	S4_SETTLER_SUNFLOWEROILMAKER,
	S4_SETTLER_MANACOPTERMASTER,

	S4_SETTLER_UNK68 = 68, // The first 6 entities of a game are this. Maybe the spawn flags set in the editor?
	S4_SETTLER_UNK69 = 69, // Probably door swordman of a tower
};

enum S4_ANIMAL_ENUM : BYTE {
	S4_ANIMAL_NONE = 0,
	S4_ANIMAL_HOG = 1,
	S4_ANIMAL_BUG_1 = 2, // unconfirmed, is it an IEntity?
	S4_ANIMAL_BUG_2 = 3, // unconfirmed, is it an IEntity?
	S4_ANIMAL_DEER_FEMALE = 4,
	S4_ANIMAL_DEER_MALE = 5,
	S4_ANIMAL_FOX = 6,
	S4_ANIMAL_CHICKEN = 7, // unconfirmed, is it an IEntity?
	S4_ANIMAL_JAGUAR = 8, // unconfirmed
	S4_ANIMAL_BUNNY_RED = 9,
	S4_ANIMAL_DOLPHIN = 10, // unconfirmed, probably not an IEntity
	S4_ANIMAL_SEA_MONSTER = 11, // unconfirmed, probably not an IEntity
	S4_ANIMAL_SHARK = 12, // unconfirmed, probably not an IEntity
	S4_ANIMAL_BEAR = 13, // unconfirmed
	S4_ANIMAL_WOLF = 14, // unconfirmed
	S4_ANIMAL_FISH = 15, // unconfirmed, probably not an IEntity
	S4_ANIMAL_BUNNY_GRAY = 16,
	S4_ANIMAL_BULL = 17, // unconfirmed
	S4_ANIMAL_SEAGUL = 0, // unknown, probably an effect?
	S4_ANIMAL_DONKEY = 0, // unknown, probably an ISettler?
	S4_ANIMAL_BUTTERFLY_1 = 0, // unknown, probably an effect?
	S4_ANIMAL_BUTTERFLY_2 = 0, // unknown, probably an effect?
	S4_ANIMAL_BUTTERFLY_3 = 0, // unknown, probably an effect?
	S4_ANIMAL_DUCK_MALE = 0,  // unknown, probably an effect?
	S4_ANIMAL_DUCK_FEMALE = 0,  // unknown, probably an effect?
	S4_ANIMAL_PARROT = 0,  // unknown, probably an effect?
};

enum S4_VEHICLE_ENUM : BYTE {
	S4_VEHICLE_NONE = 0,
	S4_VEHICLE_WARSHIP, // vehicle id 1
	S4_VEHICLE_FERRY,
	S4_VEHICLE_TRANSPORTSHIP,
	S4_VEHICLE_WARMACHINE,
	S4_VEHICLE_CART,
	S4_VEHICLE_FOUNDATION_CART,
};

enum S4_TREE_ENUM : BYTE {
	S4_TREE_NONE = 0,
	S4_TREE_OAK = 1,
	S4_TREE_BEECH = 2,
	S4_TREE_ASH = 3,
	S4_TREE_LINDEN = 4,
	S4_TREE_BIRCH = 5,
	S4_TREE_POPLAR = 6,
	S4_TREE_CHESTNUT = 7,
	S4_TREE_MAPLE = 8,
	S4_TREE_FIR = 9,
	S4_TREE_SPRUCE = 10,
	S4_TREE_COCONUT = 11,
	S4_TREE_DATE = 12,
	S4_TREE_WALNUT = 13,
	S4_TREE_CORKOAK = 14,
	S4_TREE_PINE = 15,
	S4_TREE_PINE2 = 16,
	S4_TREE_OLIVE_LARGE = 17,
	S4_TREE_OLIVE_SMALL = 18,

	// Trees the tribes grow
	S4_TREE_ROMAN_1 = S4_TREE_FIR,
	S4_TREE_ROMAN_2 = S4_TREE_SPRUCE,
	S4_TREE_VIKING_1 = S4_TREE_FIR,
	S4_TREE_VIKING_2 = S4_TREE_SPRUCE,
	S4_TREE_MAYA_1 = S4_TREE_WALNUT,
	S4_TREE_MAYA_2 = S4_TREE_CORKOAK,
	S4_TREE_TROJAN_1 = S4_TREE_PINE,
	S4_TREE_TROJAN_2 = S4_TREE_PINE2,
	S4_TREE_TROJAN_3 = S4_TREE_OLIVE_LARGE,
	S4_TREE_TROJAN_4 = S4_TREE_OLIVE_SMALL,
};

enum S4_OBJECT_ENUM : BYTE { // plants and stuff
	S4_OBJECT_NONE = 0,
	S4_OBJECT_1 = 1,
	S4_OBJECT_WHEAT = S4_OBJECT_1 + 208,
	S4_OBJECT_SUNFLOWER = S4_OBJECT_1 + 254,
	// todo: add all objects
};

enum S4_SPELL_ENUM : BYTE {
	S4_SPELL_NONE = 0,
	S4_SPELL_1,
	S4_SPELL_2,
	S4_SPELL_3,
	S4_SPELL_4,
	S4_SPELL_5,
	S4_SPELL_6,
	S4_SPELL_7,
	S4_SPELL_8,
};

enum S4_ENTITY_CAUSE : BOOL {
	S4_ENTITY_DESTRUCTED = 1,
	S4_ENTITY_CONSTRUCTED,
};
